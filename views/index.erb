<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
    integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <link href='https://cdn.jsdelivr.net/npm/fullcalendar-scheduler@5.9.0/main.min.css' rel='stylesheet' />
    <script src='https://cdn.jsdelivr.net/npm/fullcalendar-scheduler@5.9.0/main.min.js'></script>
    <!-- JavaScript Bundle with Popper -->
    <script src="//unpkg.com/alpinejs" defer></script>
    <title>Git Commit</title>
  </head>
  <body @hashchange.window="pageChangeHandler" x-data="init">
    <div class="container">
      <nav class="navbar navbar-light bg-light">
        <a href="#"><span class="navbar-brand mb-0 h1" x-text="title"></span></a>
        <!--<a href="#manage">Manage</a> -->
      </nav>
      <div class="row mt-4">
        <div class="col">
          <template x-for="alert in alerts">
            <div x-bind:class="`alert alert-${alert.status}`" role="alert">
              <span x-text="alert.message"></span>
              <button type="button" class="close" data-dismiss="alert" aria-label="Close" @click="alerts=[]">
                <span aria-hidden="true">&times;</span>
              </button>
            </div>
          </template>
          <section x-show="page === '#manage'">
            <form x-on:submit="saveGroup">
              <div class="form-group">
                <label>Batch Name</label>
                <input type="text" x-model="form.name" class="form-control" placeholder="Batch Name">
                <small class="form-text text-muted">contoh: RMT-15-OSLO-FOX</small>
              </div>
              <div class="form-group">
                <label>List users</label>
                <textarea name="" x-model="form.text" class="form-control" id="" cols="100" rows="10"
                x-on:change="pasteHandler"></textarea>
                <small class="form-text text-muted">masuk ke googlesheets phase 2 > sheets final notes > select dari nama
                  B4 - UsernameGithub terakhir</small>
              </div>
              <button type="submit" class="btn btn-primary">Submit</button>
            </form>
          </section>
          <section x-show="page === ''" x-init="fetchRepoCommits">
            <div x-show="Object.keys(repos).length < 1">
              <img src="https://c.tenor.com/I6kN-6X7nhAAAAAj/loading-buffering.gif" alt="" srcset="" width="75" height="75" class="d-block m-auto">
            </div>
            <div x-show="Object.keys(repos).length > 0" >
              <div class="row">
                <div class="col-md-10">
                  <select class="custom-select" x-model="selectedRepo"  @change="selectRepoHandler">
                    <option selected >Choose...</option>
                    <template x-for="repo in Object.keys(repos)">
                      <option :value="repo" x-text="repo"></option>
                    </template>
                  </select>
                </div>
                <div class="col-md-2">
                  <div @click="displayCalendar" class="btn btn-info" x-text="`Toggle view`"></div>
                </div>
              </div>
              <div x-show="viewType === 'timeline'" id='calendar' class="mt-4"></div>
              <div class="row mt-4">
                <table x-show="viewType === 'table'" class="table mt-4">
                  <thead>
                    <tr>
                      <th scope="col">#</th>
                      <th scope="col" @click="sort('selectedRepoBranches', 'branch_name')">
                        <div class="d-flex align-items-center">
                          Name
                          <div class="arrow-up ml-3" x-show="sortSelected == 'branch_name' && sortDirection == 1"></div>
                          <div class="arrow-down ml-3" x-show="sortSelected == 'branch_name' && sortDirection == -1"></div>
                        </div>
                      </th>
                      <th scope=" col" @click="sort('selectedRepoBranches', 'commits')">
                        <div class="d-flex align-items-center">
                          Jumlah Commit
                          <div class="arrow-up ml-3" x-show="sortSelected == 'commits' && sortDirection == 1"></div>
                          <div class="arrow-down ml-3" x-show="sortSelected == 'commits' && sortDirection == -1"></div>
                        </div>
                      </th>
                      <th scope="col">Action</th>
                    </tr>
                  </thead>
                  <tbody>
                    <template x-for="(branch, index) in selectedRepoBranches ">
                      <tr>
                        <td scope="row" x-text="index+1"></td>
                        <td x-text="branch.branch_name"></td>
                        <td x-text="branch.commits.length"></td>
                        <td>
                          <!--<div style="cursor: pointer" class="btn btn-info text-white pointer">
                            Compare</div> -->
                          <div style="cursor: pointer" class="btn btn-info text-white pointer" @click="selectBranchHandler(branch.branch_name)">
                            View</div>
                        </td>
                      </tr>
                    </template>
                  </tbody>
                </table>
              </div>
              <div class="d-block text-center">
                <span x-show="selectedRepoBranches.length < 1"> Please select a repo</span>
              </div>
            </div>
          </section>
          <section x-show="page.includes('branch_')">
            <h2 x-text='`Commit Activity - ${branchDetail.branch_name}`'></h2>
            <table class="table">
              <tbody>
                <template x-for="(commit, idx) in branchDetail.commits">
                  <tr>
                    <td x-text="idx+1" class="mr-1"></td>
                    <td x-text="formatDate(commit.author.date)" class="mr-2"></td>
                    <td>
                      <a target="_blank" :href="commit.api_url.replace(/api\.|git\/|repos\//g, '').replace('commits', 'commit')" x-text="commit.message"></a>
                    </td>
                  </tr>
                </template >
              </tbody>
            </table>
          </section>
        </div>
      </div>
    </div>
  </body>
  <script>
    const DATA_KEY = "h8cohorts"
    
    function init() {
      let cohorts = localStorage[DATA_KEY] || "{}"
      cohorts = JSON.parse(cohorts)
    
      return {
        base_url: "<%= api_url %>",
        viewType: "table",
        sortDirection: 1,
        sortSelected: null,
        users: [],
        alerts: [],
        repos: {},
        branchDetail: {},
        selectedRepo: null,
        selectedRepoBranches: [],
        cohorts: Object.keys(cohorts),
        dropdown: false,
        title: "GCH - Git Commit History",
        page: location.hash,
        form: {
          name: '',
          text: ''
        },
        selectRepoHandler() {
          this.selectedRepoBranches = this.repos[this.selectedRepo]
        },
        parsedData(){
          let commits = []
          let branchGroups = []
          let id = 1
          this.selectedRepoBranches.forEach( (branch, bid) => {
            let branchId = bid+1
            branchGroups.push({ id: branchId, title: branch.branch_name})
            branch.commits.forEach((commit, cid) => {
    
                commits.push({
                  id,
                  start: commit.author.date.split(" ")[0],
                  end: commit.author.date.split(" ")[0],
                  title: commit.message,
                  resourceId: branchId
                })
                id++
            })
          })
          return {commits, branchGroups}
        },
        formatDate(dateParams){
          let date = new Date(dateParams)
          return new Intl.DateTimeFormat('id-ID', { dateStyle: 'full', timeStyle: 'short' }).format(date)
        },
        displayCalendar(){
            let {commits, branchGroups} = this.parsedData()
            console.log(branchGroups);
            console.log(commits);
    
            var calendarEl = document.getElementById('calendar');
            var calendar = new FullCalendar.Calendar(calendarEl, {
              timeZone: 'UTC',
              initialView: 'resourceTimelineDay',
              aspectRatio: 1.5,
              headerToolbar: {
                left: 'prev,next',
                center: 'title',
                right: 'resourceTimelineDay,resourceTimelineWeek,resourceTimelineMonth'
              },
              editable: true,
              resourceAreaHeaderContent: 'Branch',
              resources: branchGroups,
              events: commits
            });
            this.viewType = this.viewType == "table" ? "timeline" : "table"
            calendar.render();
        },
        sort(data, key) {
          this[data] = this[data].sort((b, a) => {
            if (key === "commits") {
              return a[key].length < b[key].length ? -this.sortDirection : this.sortDirection
            } else {
              return a[key] < b[key] ? -this.sortDirection : this.sortDirection
            }
          })
          this.sortDirection = -this.sortDirection
          this.sortSelected = key
    
        },
        selectBranchHandler(branchName){
          this.branchDetail = this.selectedRepoBranches.filter( branch => branch.branch_name === branchName)[0]
    
          location.hash = "branch_"+this.branchDetail.branch_name
        },
    
        fetchRepoCommits() {
          let url = this.base_url + '/hooks/github'
          fetch(url, {
            method: "POST",
            body: JSON.stringify({ cache: true })
          })
            .then(resp => resp.json())
            .then(data => {
              this.repos = data
            })
    
        },
        getGroups() {
          let cohorts = localStorage[DATA_KEY]
          cohorts = JSON.parse(cohorts)
          return Object.keys(cohorts)
        },
        cohortSelectHandler(event) {
    
        },
        pasteHandler(event) {
          let text = event.target.value
          let rows = text.split('\n').map(row => {
            return row.split('\t')
          })
          this.users = rows
        },
        pageChangeHandler(event) {
          this.page = location.hash
        },
        saveGroup() {
          try {
            let cohorts = localStorage[DATA_KEY] || "{}"
            cohorts = JSON.parse(cohorts)
            cohorts[this.form.name] = this.users
            localStorage.setItem(DATA_KEY, JSON.stringify(cohorts))
            this.cohorts = Object.keys(cohorts)
            this.alerts.push({ status: 'success', message: 'Successfully add' })
          } catch (error) {
            this.alerts.push({ status: 'danger', message: error.message })
          }
          setTimeout(() => {
            this.alert = []
          }, 2000);
        }
      }
    }
  </script>
  <style>
    .arrow-up {
      width: 0;
      height: 0;
      border-left: 5px solid transparent;
      border-right: 5px solid transparent;
    
      border-bottom: 5px solid black;
    }
    
    .arrow-down {
      width: 0;
      height: 0;
      border-left: 5px solid transparent;
      border-right: 5px solid transparent;
    
      border-top: 5px solid black;
    }
  </style>
</html>
